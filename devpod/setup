#!/bin/bash

export XDG_CONFIG_HOME="$HOME"/.config
DOTFILES_DIR="$HOME/dotfiles"
CONFIG_DIR="$HOME/.config"

# Update specific git submodules
git -C "$DOTFILES_DIR" submodule update --init --recursive \
    nvim \
    shell/zsh/zsh-autosuggestions \
    shell/zsh/zsh-syntax-highlighting

create_directories() {
  local directories=("$@")
  for dir in "${directories[@]}"; do
    mkdir -p "$dir" || { echo "Error creating directory $dir"; exit 1; }
  done
}

create_symlinks() {
  local items=("$@")
  for item in "${items[@]}"; do
    IFS=':' read -r source target <<<"$item"
    if [ -L "$target" ]; then
      echo "Removing existing symlink $target"
      unlink "$target"
    elif [ -d "$target" ]; then
      echo "Warning: $target is a directory. Skipping..."
      continue
    fi
    ln -sf "$DOTFILES_DIR/$source" "$target" || { echo "Error creating symlink $target"; exit 1; }
    echo "Created symlink for $source"
  done
}

common_directories=(
    "$XDG_CONFIG_HOME/nixpkgs"
)

common_items=(
  "devpod/config.nix:"$XDG_CONFIG_HOME"/nixpkgs/config.nix"
  "nvim:$CONFIG_DIR/nvim"
  "starship.toml:$CONFIG_DIR/starship.toml"
  "shell/zsh:$CONFIG_DIR/zsh"
  "shell/zsh/.zprofile:$HOME/.zprofile"
  "shell/zsh/.zshrc:$HOME/.zshrc"
)

create_directories "${common_directories[@]}"
create_symlinks "${common_items[@]}"

# Install Nix packages from config.nix
nix-env -iA nixpkgs.devPackages
echo "Nix packages installed successfully"

# Change the default shell to Zsh
chsh -s $(which zsh) $(whoami) || {
    echo "Error: Failed to change the default shell to Zsh."
    exit 1
}

echo "Default shell changed to Zsh successfully."
exit 0
